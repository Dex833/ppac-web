rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // --- helpers ---
    function isSignedIn() {
      return request.auth != null;
    }

    // Admin via custom claim only
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    // Allow common image types
    function isAllowedImage() {
      return request.resource.contentType == 'image/jpeg' ||
             request.resource.contentType == 'image/png'  ||
             request.resource.contentType == 'image/webp' ||
             request.resource.contentType == 'image/heic' ||
             request.resource.contentType == 'image/heif';
    }

    // Allow images OR PDF
    function isImageOrPdf() {
      return isAllowedImage() ||
             request.resource.contentType == 'application/pdf';
    }

    // Max 2 MB (strictly less than)
    function under2MB() {
      return request.resource.size < 2 * 1024 * 1024;
    }

    // Members uploads at members/{uid}/{folder}/{filename}
    // Allowed folders:
    // - profile (image only)
    // - id (image only)
    // - paidUpProof (image/pdf)
    // - caoCertification (image/pdf)
    // - residencyProof (image/pdf)
    // - authorizationLetter (image/pdf)
    match /members/{uid}/{folder}/{filename} {
      allow read: if isOwner(uid) || isAdmin();

      allow write: if isOwner(uid) && (
        (
          (folder == 'profile' || folder == 'id') &&
          isAllowedImage() &&
          under2MB()
        ) || (
          (folder == 'paidUpProof' ||
           folder == 'caoCertification' ||
           folder == 'residencyProof' ||
           folder == 'authorizationLetter') &&
          isImageOrPdf() &&
          under2MB()
        )
      );
    }

    // Optional: product images managed by admin-only tools
    match /product-images/{file=**} {
      allow read: if true;
      allow write: if isAdmin() && isImageOrPdf() && under2MB();
    }

    // Deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
